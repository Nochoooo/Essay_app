apiVersion: v1
# ConfigMap содержит конфигурационные данные для PostgreSQL
kind: ConfigMap
metadata:
  name: postgres-db-config # Имя ConfigMap для идентификации
  labels:
    app: postgresql-db # Метки для связи с другими ресурсами
data: # Параметры подключения к PostgreSQL, используемые подами
  POSTGRES_PASSWORD: "cyrva289"
  PGDATA: "/data/pgdata"
  DB_HOST: "postgres-db-lb.default.svc.cluster.local"
  DB_PORT: "5432"
  DB_NAME: "postgres"
  DB_USER: "postgres"

---

apiVersion: v1
# Service для предоставления сетевого доступа к подам
kind: Service
metadata:
  name: postgres-db-lb
spec:
  selector:
    app: postgresql-db
  type: NodePort # Делает Service доступным снаружи кластера через порт на узлах
  ports:
    - port: 5432 # Порт, на котором Service доступен внутри кластера
      targetPort: 5432 # Целевой порт на поде, к которому Service перенаправляет трафик

---
# StatefulSet для управления подами PostgreSQL
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql-db
spec:
  serviceName: postgres-db-lb # Ассоциированный Service для обеспечения сетевого доступа к подам
  replicas: 1
  selector:
    matchLabels:
      app: postgresql-db
  template:
    metadata:
      labels:
        app: postgresql-db
    spec:
      containers:
        - name: postgresql-db
          image: postgres:10.4 # Образ PostgreSQL, используемый для пода
          ports:
            - containerPort: 5432 # Порт, который контейнер будет прослушивать
          volumeMounts:
            - name: postgresql-db-disk
              mountPath: /data
          envFrom:
            - configMapRef:
                name: postgres-db-config # ConfigMap, содержащий переменные среды для контейнера
  volumeClaimTemplates:
    - metadata:
        name: postgresql-db-disk # Имя запроса на создание тома
      spec:
        accessModes: [ "ReadWriteOnce" ] # Режим доступа к тому
        resources:
          requests:
            storage: 25Gi # Запрашиваемый объем хранилища для тома